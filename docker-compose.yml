services:
  api-db:
    image: mysql
    container_name: ${MYSQL_CONTAINER}
    ports:
      - "5555:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
    networks:
      - mi_red
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db_dump.sql:/docker-entrypoint-initdb.d/db_dump.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
  
  api-patient:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${API_CONTAINER}
    ports:
      - "3000:3000"
      - "3001:3001"
    depends_on:
      api-db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=3000
      - ConnectionStrings__DefaultConnection=Server=${MYSQL_CONTAINER};Port=3306;Database=${MYSQL_DATABASE};User=${MYSQL_USER};Password=${MYSQL_PASSWORD};AllowPublicKeyRetrieval=True;SslMode=none
    networks:
      - mi_red
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
        
networks:
  mi_red:

volumes:
  mysql-data:
